jobs:
- job: VS_Latest

  pool:
    vmImage: 'windows-2019'

  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget
    NUGET_HTTP_CACHE_PATH: $(Agent.WorkFolder)\.nuget-http-cache

  steps:

  - task: UseDotNet@2
    inputs:
      packageType: 'runtime'
      version: '2.2.0'

  - task: nventiveCanaryUpdater@5
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')
    inputs:
      solution: 'Uno.Xamarin.Forms.Platform.sln'
      usePrivateFeed: false
      useNuGetOrg: true
      mergeBranch: true
      branchToMerge: 'uno'
      nugetUpdaterVersion: '2.0.6'
      allowDowngrade: true
      packageAuthor: 'nventive'
      summaryFile: '$(Build.ArtifactStagingDirectory)/Canary.md'
      resultFile: '$(Build.ArtifactStagingDirectory)/update_result.json'

  - task: GitVersion@5
    inputs:
      useConfigFile: true
      configFilePath: gitversion.yml
      
  - task: NuGetToolInstaller@0
    inputs:
        versionSpec: 5.1.0
        checkLatest: false

  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 5.0.203

  - task: NuGetCommand@2
    inputs:
      command: restore
      solution: Xamarin.Forms.sln
      selectOrConfig: config
      includeNuGetOrg: true
      verbosityRestore: Normal
      nugetConfigPath: NuGet.config

  - task: MSBuild@1
    inputs:
      solution: Uno.Xamarin.Forms.Platform.sln
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /p:Configuration=Release "/p:PackageOutputPath=$(build.artifactstagingdirectory)\nuget" "/p:PackageVersion=%GITVERSION_FullSemVer%" "/p:InformationalVersion=%GITVERSION_InformationalVersion%" "/p:DisableOriginalVersioning=true" /detailedsummary /bl:$(build.artifactstagingdirectory)\build-lib.binlog
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: NuGetCommand@2
    displayName: NuGet pack
    inputs:
      command: pack
      packagesToPack: .nuspec\Uno.Xamarin.Forms.nuspec
      configuration: Release
      packDestination: '$(Build.ArtifactStagingDirectory)'
      versioningScheme: byEnvVar
      versionEnvVar: GITVERSION_FullSemVer

  - task: PublishBuildArtifacts@1
    displayName: Publish ControlGallery Wasm Artifacts
    inputs:
      pathToPublish: .\Xamarin.Forms.ControlGallery.Uno.Wasm\bin\Release\net5.0\dist
      artifactType: container
      artifactName: FormsControlGallery-Wasm

  - task: PublishBuildArtifacts@1
    condition: always()
    displayName: Publish Nuget Artifacts
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: XamarinForms
      publishLocation: Container
      versioningScheme: byBuildNumber


- job: Wasm_UITests

  container: unoplatform/wasm-build:3.0

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget

  steps:
  - checkout: self
    clean: true

  - task: UseDotNet@2
    inputs:
      packageType: 'runtime'
      version: '2.2.0'

  - task: nventiveCanaryUpdater@5
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')
    inputs:
      solution: 'Uno.Xamarin.Forms.Platform.sln'
      usePrivateFeed: false
      useNuGetOrg: true
      mergeBranch: true
      branchToMerge: 'uno'
      nugetUpdaterVersion: '2.0.6'
      allowDowngrade: true
      packageAuthor: 'nventive'
      summaryFile: '$(Build.ArtifactStagingDirectory)/Canary.md'
      resultFile: '$(Build.ArtifactStagingDirectory)/update_result.json'

  - task: UseDotNet@2
    inputs:
      packageType: sdk
      version: 5.0.203

  - bash: |
      chmod +x build/scripts/wasm-uitest-run.sh
      build/scripts/wasm-uitest-run.sh

    env:
      GIT_TARGETBRANCH: "$(System.PullRequest.TargetBranch)"
      GIT_SOURCEBRANCH: "$(Build.SourceBranch)"
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

    displayName: 'Running build'

  - task: PublishTestResults@2
    inputs:
      testRunTitle: 'WebAssembly Test Run'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/TestResult.xml'

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-uitest-tests
      ArtifactType: Container
